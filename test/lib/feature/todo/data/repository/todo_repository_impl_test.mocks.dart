// Mocks generated by Mockito 5.4.4 from annotations
// in todo_app/test/lib/feature/todo/data/repository/todo_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:todo_app/feature/todo/data/datasource/todo_local_data_source.dart'
    as _i3;
import 'package:todo_app/feature/todo/data/datasource/todo_remote_data_source.dart'
    as _i6;
import 'package:todo_app/feature/todo/data/model/todo_firestore_model.dart'
    as _i7;
import 'package:todo_app/feature/todo/data/model/todo_hive_model.dart' as _i5;
import 'package:uuid/data.dart' as _i9;
import 'package:uuid/uuid.dart' as _i8;
import 'package:uuid/uuid_value.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUuidValue_0 extends _i1.SmartFake implements _i2.UuidValue {
  _FakeUuidValue_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TodoLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoLocalDataSource extends _i1.Mock
    implements _i3.TodoLocalDataSource {
  @override
  _i4.Future<void> create(_i5.TodoHiveModel? model) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [model],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> update(_i5.TodoHiveModel? model) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [model],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.TodoHiveModel>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.TodoHiveModel>>.value(<_i5.TodoHiveModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.TodoHiveModel>>.value(<_i5.TodoHiveModel>[]),
      ) as _i4.Future<List<_i5.TodoHiveModel>>);

  @override
  _i4.Future<_i5.TodoHiveModel?> get(String? id) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [id],
        ),
        returnValue: _i4.Future<_i5.TodoHiveModel?>.value(),
        returnValueForMissingStub: _i4.Future<_i5.TodoHiveModel?>.value(),
      ) as _i4.Future<_i5.TodoHiveModel?>);

  @override
  _i4.Future<void> sync({
    required List<String>? deleteModelIds,
    required List<_i5.TodoHiveModel>? updateModels,
    required List<_i5.TodoHiveModel>? createModels,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sync,
          [],
          {
            #deleteModelIds: deleteModelIds,
            #updateModels: updateModels,
            #createModels: createModels,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [TodoRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRemoteDataSource extends _i1.Mock
    implements _i6.TodoRemoteDataSource {
  @override
  _i4.Future<void> save(_i7.TodoFirestoreModel? model) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [model],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> update(_i7.TodoFirestoreModel? model) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [model],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i7.TodoFirestoreModel>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i4.Future<List<_i7.TodoFirestoreModel>>.value(
            <_i7.TodoFirestoreModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i7.TodoFirestoreModel>>.value(
                <_i7.TodoFirestoreModel>[]),
      ) as _i4.Future<List<_i7.TodoFirestoreModel>>);

  @override
  _i4.Future<void> sync({
    required List<String>? deleteModelIds,
    required List<_i7.TodoFirestoreModel>? updateModels,
    required List<_i7.TodoFirestoreModel>? createModels,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sync,
          [],
          {
            #deleteModelIds: deleteModelIds,
            #updateModels: updateModels,
            #createModels: createModels,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [Uuid].
///
/// See the documentation for Mockito's code generation for more information.
class MockUuid extends _i1.Mock implements _i8.Uuid {
  @override
  String v1({
    Map<String, dynamic>? options,
    _i9.V1Options? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v1,
          [],
          {
            #options: options,
            #config: config,
          },
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v1,
            [],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v1,
            [],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
      ) as String);

  @override
  List<int> v1buffer(
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i9.V1Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v1buffer,
          [buffer],
          {
            #options: options,
            #config: config,
            #offset: offset,
          },
        ),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);

  @override
  _i2.UuidValue v1obj({
    Map<String, dynamic>? options,
    _i9.V1Options? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v1obj,
          [],
          {
            #options: options,
            #config: config,
          },
        ),
        returnValue: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v1obj,
            [],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
        returnValueForMissingStub: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v1obj,
            [],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
      ) as _i2.UuidValue);

  @override
  String v4({
    Map<String, dynamic>? options,
    _i9.V4Options? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v4,
          [],
          {
            #options: options,
            #config: config,
          },
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v4,
            [],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v4,
            [],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
      ) as String);

  @override
  List<int> v4buffer(
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i9.V4Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v4buffer,
          [buffer],
          {
            #options: options,
            #config: config,
            #offset: offset,
          },
        ),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);

  @override
  _i2.UuidValue v4obj({
    Map<String, dynamic>? options,
    _i9.V4Options? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v4obj,
          [],
          {
            #options: options,
            #config: config,
          },
        ),
        returnValue: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v4obj,
            [],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
        returnValueForMissingStub: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v4obj,
            [],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
      ) as _i2.UuidValue);

  @override
  String v5(
    String? namespace,
    String? name, {
    Map<String, dynamic>? options,
    _i9.V5Options? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v5,
          [
            namespace,
            name,
          ],
          {
            #options: options,
            #config: config,
          },
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v5,
            [
              namespace,
              name,
            ],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v5,
            [
              namespace,
              name,
            ],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
      ) as String);

  @override
  List<int> v5buffer(
    String? namespace,
    String? name,
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i9.V5Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v5buffer,
          [
            namespace,
            name,
            buffer,
          ],
          {
            #options: options,
            #config: config,
            #offset: offset,
          },
        ),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);

  @override
  _i2.UuidValue v5obj(
    String? namespace,
    String? name, {
    Map<String, dynamic>? options,
    _i9.V5Options? config,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v5obj,
          [
            namespace,
            name,
          ],
          {
            #options: options,
            #config: config,
          },
        ),
        returnValue: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v5obj,
            [
              namespace,
              name,
            ],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
        returnValueForMissingStub: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v5obj,
            [
              namespace,
              name,
            ],
            {
              #options: options,
              #config: config,
            },
          ),
        ),
      ) as _i2.UuidValue);

  @override
  String v6({_i9.V6Options? config}) => (super.noSuchMethod(
        Invocation.method(
          #v6,
          [],
          {#config: config},
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v6,
            [],
            {#config: config},
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v6,
            [],
            {#config: config},
          ),
        ),
      ) as String);

  @override
  List<int> v6buffer(
    List<int>? buffer, {
    _i9.V6Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v6buffer,
          [buffer],
          {
            #config: config,
            #offset: offset,
          },
        ),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);

  @override
  _i2.UuidValue v6obj({_i9.V6Options? config}) => (super.noSuchMethod(
        Invocation.method(
          #v6obj,
          [],
          {#config: config},
        ),
        returnValue: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v6obj,
            [],
            {#config: config},
          ),
        ),
        returnValueForMissingStub: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v6obj,
            [],
            {#config: config},
          ),
        ),
      ) as _i2.UuidValue);

  @override
  String v7({_i9.V7Options? config}) => (super.noSuchMethod(
        Invocation.method(
          #v7,
          [],
          {#config: config},
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v7,
            [],
            {#config: config},
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v7,
            [],
            {#config: config},
          ),
        ),
      ) as String);

  @override
  List<int> v7buffer(
    List<int>? buffer, {
    _i9.V7Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v7buffer,
          [buffer],
          {
            #config: config,
            #offset: offset,
          },
        ),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);

  @override
  _i2.UuidValue v7obj({_i9.V7Options? config}) => (super.noSuchMethod(
        Invocation.method(
          #v7obj,
          [],
          {#config: config},
        ),
        returnValue: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v7obj,
            [],
            {#config: config},
          ),
        ),
        returnValueForMissingStub: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v7obj,
            [],
            {#config: config},
          ),
        ),
      ) as _i2.UuidValue);

  @override
  String v8({_i9.V8Options? config}) => (super.noSuchMethod(
        Invocation.method(
          #v8,
          [],
          {#config: config},
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v8,
            [],
            {#config: config},
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v8,
            [],
            {#config: config},
          ),
        ),
      ) as String);

  @override
  List<int> v8buffer(
    List<int>? buffer, {
    _i9.V8Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v8buffer,
          [buffer],
          {
            #config: config,
            #offset: offset,
          },
        ),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);

  @override
  _i2.UuidValue v8obj({_i9.V8Options? config}) => (super.noSuchMethod(
        Invocation.method(
          #v8obj,
          [],
          {#config: config},
        ),
        returnValue: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v8obj,
            [],
            {#config: config},
          ),
        ),
        returnValueForMissingStub: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v8obj,
            [],
            {#config: config},
          ),
        ),
      ) as _i2.UuidValue);

  @override
  String v8g({_i9.V8GenericOptions? config}) => (super.noSuchMethod(
        Invocation.method(
          #v8g,
          [],
          {#config: config},
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v8g,
            [],
            {#config: config},
          ),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #v8g,
            [],
            {#config: config},
          ),
        ),
      ) as String);

  @override
  List<int> v8gbuffer(
    List<int>? buffer, {
    _i9.V8GenericOptions? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #v8gbuffer,
          [buffer],
          {
            #config: config,
            #offset: offset,
          },
        ),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);

  @override
  _i2.UuidValue v8gobj({_i9.V8GenericOptions? config}) => (super.noSuchMethod(
        Invocation.method(
          #v8gobj,
          [],
          {#config: config},
        ),
        returnValue: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v8gobj,
            [],
            {#config: config},
          ),
        ),
        returnValueForMissingStub: _FakeUuidValue_0(
          this,
          Invocation.method(
            #v8gobj,
            [],
            {#config: config},
          ),
        ),
      ) as _i2.UuidValue);
}
